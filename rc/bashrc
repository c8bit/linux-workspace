#!/usr/bin/env bash

#==============================================================================
# ~/.bashrc
#==============================================================================

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

readonly BASH_VERSION_NUMBER=$(sed -r 's/^([0-9]+\.[0-9]+\.[0-9]+).*$/\1/' <<< $BASH_VERSION)
readonly BASHRC_SCRIPTS_DIR=~/.bashrc-scripts
readonly BASH_LOCAL_FILE=~/.bash_local

# Shell Prompt Profiles
readonly PROMPT_DEFAULT='\e[1;35m[\u@\h \W]\e[m\e[0;33m{$?}\$\e[m '
readonly PROMPT_CAUTION='\e[0;31caution->\e[m '
readonly PROMPT_PROD=''

PS1=${PROMPT_DEFAULT}

# Write all commands to history file immediately
# Note: PROMPT_COMMAND contents are executed as regular bash commands just before
#    bash displays a prompt.
PROMPT_COMMAND='history -a'
HISTSIZE=1000

GREP_OPTIONS='--color=always'


# Color Schemes
# NOTE: Should ensure terminal is using solarized-dark color scheme, then add
#   the appropriate dircolors DB file so the below commands will go into
#   effect.
readonly DIRCOLORS_THEME="dircolors.ansi-dark"

readonly DIRCOLORS_DIR="$HOME/.dir_colors"
readonly DIRCOLORS_THEME_FILE="$DIRCOLORS_DIR/$DIRCOLORS_THEME"

if [[ -f $DIRCOLORS_THEME_FILE ]]; then
    eval `dircolors ${DIRCOLORS_THEME_FILE}`
fi


# Android paths
# TODO: Load in ANDROID_STUDIO_PATH and ANDROID_HOME from another file in
#   case other systems have them installed at different locations, and update
#   the conditionals to run only if they are defined. Leave defaults in here
#   just in case.
readonly ANDROID_STUDIO_PATH="/usr/local/android-studio"
readonly ANDROID_STUDIO_BIN="$ANDROID_STUDIO_PATH/bin"

declare -rx ANDROID_HOME="$HOME/Android/Sdk"
readonly ANDROID_SDK_TOOLS="$ANDROID_HOME/tools"
readonly ANDROID_SDK_PLATFORMTOOLS="$ANDROID_HOME/platform-tools"
readonly ANDROID_SDK_BUILDTOOLS="$ANDROID_HOME/build-tools"

# Add Android Studio to PATH if it's installed
if [[ -d $ANDROID_STUDIO_PATH ]]; then
    PATH=$PATH:$ANDROID_STUDIO_BIN
fi

# Add Android Sdk tools to PATH if SDK is installed
if [[ -d $ANDROID_HOME ]]; then
    PATH=$PATH:$ANDROID_SDK_TOOLS:$ANDROID_SDK_PLATFORMTOOLS:$ANDROID_SDK_BUILDTOOLS
fi


#TODO: Confirm this works properly, remain consistent with standards (once I
#   decide what they are).
readonly POWERLINE_SCRIPT="$HOME/.shell_prompt.sh"
if [[ -f $POWERLINE_SCRIPT ]]; then
    source ${POWERLINE_SCRIPT}
fi


# Exports
export EDITOR=vim

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## Sources all the startup scripts in the bashrc scripts directory.
function sourceBashrcScripts
{
    for file in ${BASHRC_SCRIPTS_DIR}/*; do
        source $file
    done
}

## Shortcut for checking current python virtualenv instance.
function checkPythonVenv
{
    if [[ -z "$VIRTUAL_ENV" ]]; then
        echo "Virtual Environment not set."
    else
        basename ${VIRTUAL_ENV}
    fi
}

## Facilitates prompt profile switching on ssh to specific hosts.
#
# \arg remoteHost: The user@host argument to ssh.
function sshProfileSwitch
{
    local remoteHost=$1

    #FIXME: Not working yet... (T^T)
    #Set the profile here
    local oldProfile=${PS1}
    if [[ ${remoteHost} == *"sat"* ]]; then
        PS1=${PROMPT_CAUTION}
    elif [[ ${remoteHost} == *"prod"* ]]; then
        PS1=${PROMPT_PROD}
    fi

    ssh ${remoteHost}

    #Restore the old profile here
    PS1=${oldProfile}
}

## Generates the 'tags' file for Vim from personal Vim-style help files.
function generateVimHelp
{
    #TODO: Make a 'constants' shell script and pull vimdir in from that
    vim -c "helpt ${HOME}/.vim/doc/ | q"
}

function setAliases
{
    alias igrep='grep -i'
    alias vgrep='grep -v'
    alias vigrep='grep -vi'
    alias ls='ls --color=auto'
    alias l='ls -lrth'
    alias lx='ls -lXh'
    alias la='l -a'
    alias lv="l | grep -v '~$' | grep -v '[.]sw[op]$'"
    alias lav="la | grep -v '~$' | grep -v '[.]sw[op]$' | grep -v '^d.*[.]$'"

    alias wk="cd $HOME/workspace"

    alias telnet="echo 'Go home, you are obviously drunk'"

    alias venv='checkPythonVenv'
    #alias ssh='sshProfileSwitch'

    #FIXME: Figure out if this is arbitrary and needs to be removed. I think it is/does.
    # If vi exists but 'vim' doesn't, alias 'vim' to 'vi'. This happens on 
    #   Cygwin, even though vi IS vim on there.
    ##if [[ ! $(command -v vim 2>&1>/dev/null) ]]; then
    ##    if [[ $(command -v vi 2>&1>/dev/null) ]]; then
    ##        alias vim='vi'
    ##    fi
    ##fi
}

## Enables and/or executes any miscellaneous settings that don't fall into other
#  categories.
function setMisc
{
    # Disable software flow ctrl in terminals (to avoid C-s and C-q annoyances)
    stty -ixon
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

main()
{
    setAliases
    sourceBashrcScripts
    setMisc
    generateVimHelp

    ##Show machine info if screenfetch is installed
    ##FIXME: This doesn't work, the command thing isn't reliable in current form
    #if [[ $(command -v screenfetch 2>&1>/dev/null) ]]; then
    #    screenfetch
    #fi

    # Very last step, source local bash files
    if [[ -f $BASH_LOCAL_FILE ]]; then
        source $BASH_LOCAL_FILE
    fi
}

main
