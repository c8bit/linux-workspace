#!/usr/bin/env bash

#------------------------------------------------------------------------------
# ~/.bashrc
#------------------------------------------------------------------------------

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

readonly BASH_VERSION_NUMBER=$(sed -r 's/^([0-9]+\.[0-9]+\.[0-9]+).*$/\1/' <<< $BASH_VERSION)
readonly BASHRC_SCRIPTS_DIR=~/.bashrc-scripts

#Prompt Profiles
readonly PROMPT_DEFAULT='\e[1;35m[\u@\h \W]\e[m\e[0;33m{$?}\$\e[m '
readonly PROMPT_CAUTION='\e[0;31caution->\e[m '
readonly PROMPT_PROD=''

PS1=${PROMPT_DEFAULT}

#TODO: Confirm this works properly, remain consistent with standards (once I
#   decide what they are).
readonly POWERLINE_SCRIPT="~/.shell_prompt.sh"
if [[ -f $POWERLINE_SCRIPT ]]; then
    source ${POWERLINE_SCRIPT}
fi

function sourceBashrcScripts {
    ## Sources all the startup scripts in the bashrc scripts directory.

    for file in ${BASHRC_SCRIPTS_DIR}/*; do
        source $file
    done
}

function checkPythonVenv {
    ## Shortcut for checking current python virtualenv instance.

    if [[ -z "$VIRTUAL_ENV" ]]; then
        echo "Virtual Environment not set."
    else
        basename ${VIRTUAL_ENV}
    fi
}

function sshProfileSwitch {
    ## Facilitates prompt profile switching on ssh to specific hosts.
    #
    # \arg remoteHost: The user@host argument to ssh.

    local remoteHost=$1

    #FIXME: Not working yet... (T^T)
    #Set the profile here
    local oldProfile=${PS1}
    if [[ ${remoteHost} == *"sat"* ]]; then
        PS1=${PROMPT_CAUTION}
    elif [[ ${remoteHost} == *"prod"* ]]; then
        PS1=${PROMPT_PROD}
    fi

    ssh ${remoteHost}

    #Restore the old profile here
    PS1=${oldProfile}
}

function generateVimHelp {
    ## Generates the 'tags' file for Vim from personal Vim-style help files.

    #TODO: Make a 'constants' shell script and pull vimdir in from that
    vim -c "helpt ${HOME}/.vim/doc/"
}

function setAliases {
    alias ls='ls --color=auto'
    alias l='ls -lrth'
    alias la='l -a'

    alias venv='checkPythonVenv'
    #alias ssh='sshProfileSwitch'

    #FIXME: Figure out if this is arbitrary and needs to be removed. I think it is/does.
    # If vi exists but 'vim' doesn't, alias 'vim' to 'vi'. This happens on 
    #   Cygwin, even though vi IS vim on there.
    if [[ ! $(command -v vim 2>&1>/dev/null) ]]; then
        if [[ $(command -v vi 2>&1>/dev/null) ]]; then
            alias vim='vi'
        fi
    fi

}

function setMisc {
    ## Enables and/or executes any miscellaneous settings that don't fall into other
    #  categories.

    # Disable software flow ctrl in terminals (to avoid C-s and C-q annoyances)
    stty -ixon
}

main() {
    setAliases
    sourceBashrcScripts
    setMisc
    generateVimHelp

    #Show machine info if screenfetch is installed
    if [[ $(command -v screenfetch 2>&1>/dev/null) ]]; then
        screenfetch
    fi
}

main
